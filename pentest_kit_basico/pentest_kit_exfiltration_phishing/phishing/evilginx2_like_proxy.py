
import socket
import threading
import ssl

def handle_client(client_socket):
    request = client_socket.recv(4096)
    print(f"[+] Captured Request:\n{request.decode(errors='ignore')}\n")
    client_socket.close()

def start_server():
    context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)
    context.load_cert_chain(certfile="cert.pem", keyfile="key.pem")
    
    bind_ip = "0.0.0.0"
    bind_port = 8443

    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((bind_ip, bind_port))
    server.listen(5)
    
    print(f"[*] Listening on https://{bind_ip}:{bind_port} ...")

    while True:
        client_socket, addr = server.accept()
        ssl_client_socket = context.wrap_socket(client_socket, server_side=True)
        client_handler = threading.Thread(target=handle_client, args=(ssl_client_socket,))
        client_handler.start()

if __name__ == "__main__":
    start_server()
